{"version":3,"sources":["common/route.js","common/Helper.ts","config/Color.ts","GlobalModel.ts","config/Const.ts","Router.tsx","index.js"],"names":["require","Route","Router","Link","Platform","OS","BrowserRouter","NativeRouter","Helper","Dimensions","get","width","height","Color","isIphoneX_helper","consumer_key","comsumer_key_secret","access_token","access_token_secret","client","Twitter","subdomain","consumer_secret","access_token_key","Store","index","this","tabs","map","tab","_index","Object","assign","active","console","log","then","results","catch","error","observable","label","action","routes","path","component","route","react_default","a","createElement","Text","style","fontSize","App","observer","handleTabSwitch","updateTabActiveStatus","webAuth","_this2","store","View","styles","flex","topbar","userName","TouchableOpacity","onPress","key","tabItem","tabItemActive","tabLabel","tabLabelActive","v","Component","StyleSheet","create","flexDirection","alignItems","justifyContent","fontWeight","borderBottomColor","borderBottomWidth","borderStyle","color","copy","AppRegistry","registerComponent","runApplication","rootTag","document","getElementById"],"mappings":"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","file":"static/js/main.3e186238.chunk.js","sourcesContent":["import { Platform } from 'react-native'\nexport const { Route, Link } = require('react-router-native')\nexport const Router = Platform.OS === 'web' ? require('react-router-native').BrowserRouter : require('react-router-native').NativeRouter","import { Dimensions, Platform } from 'react-native'\nimport { isIphoneX as isIphoneX_helper } from 'react-native-iphone-x-helper'\n\nexport default {\n  /**\n   * get window size\n   */\n  Width: Dimensions.get('window').width,\n  Height: Dimensions.get('window').height,\n\n  isWeb(): boolean {\n    return Platform.OS === 'web'\n  },\n\n  /**\n   * android\n   * @returns {boolean}\n   */\n  isAndroid(): boolean {\n    return Platform.OS === 'android'\n  },\n\n  /**\n   * ios\n   * @returns {boolean}\n   */\n  isIOS(): boolean {\n    return Platform.OS === 'ios'\n  },\n\n  /**\n   * is iphone x ?\n   */\n  isIphoneX: isIphoneX_helper,\n\n}","export default {\n  twitter_blue: '#1DA1F2',\n  facebook_blue: '#3B5998',\n  google_red: '#DB4437',\n}","import { observable, action, useStrict } from 'mobx'\nimport Request from 'axios'\nimport Twitter from 'twitter-lite'\n\nimport Keys from './config/Const'\n\nconst {\n  consumer_key,\n  comsumer_key_secret,\n  access_token,\n  access_token_secret,\n} = Keys\n\nconst client = new Twitter({\n  subdomain: \"api\",\n  consumer_key,\n  consumer_secret: comsumer_key_secret,\n  access_token_key: access_token, // from your User (oauth_token)\n  access_token_secret: access_token_secret // from your User (oauth_token_secret)\n});\n\nexport default class GlobalModel {\n  @observable userName = 'Tim Wu Twitter Demo'\n  @observable tabs = [\n    { label: 'Home', active: true },\n    { label: 'Explore', active: false },\n    { label: 'Notifications', active: false },\n    { label: 'Messages', active: false },\n  ]\n\n  // @computed\n  // get unfinishedTodoCount() {\n  //   return this.todos.filter(todo => !todo.finished).length\n  // }\n\n  @action updateTabActiveStatus(index: number) {\n    this.tabs = this.tabs.map((tab, _index) => {\n      return Object.assign({}, tab, { active: _index == index ? true : false })\n    })\n  }\n\n  @action async webAuth() {\n    console.log('client', client)\n    client\n      .get(\"account/verify_credentials\")\n      .then((results: any) => {\n        console.log(\"results\", results);\n      })\n      .catch(console.error);\n  }\n}","export default {\n  consumer_key: 'XaK9r0vNRBQBrCM4MqZOAJXf0',\n  comsumer_key_secret: 'A08os4T6pl2sgOthhvv8I8FB9iK151EsxiSkFqFo0vWUAkvCRn',\n  access_token: '1111633208918056962-TDnywuMC0JDXbarqV4CxA6CIVbq1Qc',\n  access_token_secret: 'gl4nEVJ1XknpvM6gIPjT9hqMZqrn7V8uQDpMlEpqxN3Vv',\n}","import React, { Component } from \"react\"\nimport { Text, View, Button, TouchableOpacity, StyleSheet } from \"react-native\"\nimport { Router, Route, Link } from './common/route'\nimport { useStrict } from 'mobx'\nimport { observer } from 'mobx-react'\nimport Helper from './common/Helper'\n\nimport Color from './config/Color'\n\nimport GlobalModel from './GlobalModel'\n\nconst Store = new GlobalModel()\n\nfunction Home(route: any) {\n  // a list of tweets\n  return <Text style={{ fontSize: 55 }}>Home Page</Text>\n}\n\nfunction Search(route: any) {\n  return <Text style={{ fontSize: 55 }}>Search Page</Text>\n}\n\nconst routes = [\n  {\n    path: \"/\",\n    component: Home\n  },\n  {\n    path: \"/search\",\n    component: Search\n  }\n]\n\n@observer\nclass App extends Component {\n  componentDidMount () {\n    Helper.isWeb() && Store.webAuth() // web use web auth\n    // !Helper.isWeb() && Store.nativeAuth() // native use native auth\n  }\n\n  handleTabSwitch = (index: number) => {\n    Store.updateTabActiveStatus(index)\n  }\n\n  render() {\n    return (\n      <Router store={Store}>\n        <View>\n          <View style={[styles.flex, styles.topbar]}>\n            <Text style={styles.userName}>{Store.userName}</Text>\n          </View>\n          <View style={[styles.flex, styles.tab]}>\n            {Store.tabs.map((tab, index) => {\n              const { label, active } = tab\n              return (\n              <TouchableOpacity onPress={() => this.handleTabSwitch(index)} key={index} style={[styles.flex, styles.tabItem, active && styles.tabItemActive]}>\n                <Text style={[styles.tabLabel, active && styles.tabLabelActive]}>{label}</Text>\n              </TouchableOpacity>\n              )\n            })}\n          </View>\n          {\n            routes.map((v, index) => (\n              <Route key={index} path={v.path} component={v.component} />\n            ))\n          }\n        </View>\n      </Router>\n    )\n  }\n}\n\nconst styles = StyleSheet.create({\n  flex: {\n    flexDirection: 'row',\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  userName: {\n    fontSize: 14,\n    fontWeight: 'bold',\n  },\n  topbar: {\n    height: 49,\n  },\n  tab: {\n    height: 49,\n  },\n  tabItem: {\n    flex: 1,\n    height: 49,\n  },\n  tabItemActive: {\n    borderBottomColor: Color.twitter_blue,\n    borderBottomWidth: 2,\n    borderStyle: 'solid',\n  },\n  tabLabel: {\n    fontSize: 14,\n  },\n  tabLabelActive: {\n    color: Color.twitter_blue,\n  },\n  copy: {},\n})\n\nexport default App\n","import { AppRegistry } from \"react-native\";\nimport Router from \"./Router\";\n\nAppRegistry.registerComponent(\"publish\", () => Router);\nAppRegistry.runApplication(\"publish\", {\n  rootTag: document.getElementById(\"root\")\n});"],"sourceRoot":""}